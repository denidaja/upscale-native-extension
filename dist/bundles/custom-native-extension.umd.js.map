{"version":3,"file":"custom-native-extension.umd.js","sources":["../../projects/custom-native-extension/src/lib/custom-native-extension.service.ts","../../projects/custom-native-extension/src/lib/custom-native-extension.component.ts","../../projects/custom-native-extension/src/lib/custom-native-extension.component.html","../../projects/custom-native-extension/src/lib/custom-native-extension.module.ts","../../projects/custom-native-extension/src/public-api.ts","../../projects/custom-native-extension/src/custom-native-extension.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomNativeExtensionService {\n\n  constructor() { }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ProductService,} from \"@upscale/service-client-angular\";\n\n@Component({\n  selector: 'lib-custom-native-extension',\n  templateUrl: \"./custom-native-extension.component.html\",\n  styleUrls: ['./custom-native-extension.component.scss'],\n})\n\nexport class CustomNativeExtensionComponent implements OnInit {\n  timesBought: string = null;\n\n  constructor(\n    private productService: ProductService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    let tokenizedURL = window.location.href.split(\"/\");\n    let productId = tokenizedURL[tokenizedURL.length - 1];\n\n    this.productService.getProductById(productId).subscribe((product) => {\n      if (!product[\"attributeSets\"][0]) {\n        setTimeout(() => {\n          this.timesBought = null;\n        }, 0)\n      } else {\n        setTimeout(() => {\n          this.timesBought = product.attributeSets[0].values[0].value;\n        }, 0)\n      }\n    });\n  }\n}\n","<div *ngIf=\"timesBought\" class=\"times-bought-container\">\n  <p class=\"times-bought-text\">\n    ðŸ”¥ðŸ”¥ This product has been bought {{timesBought}} times in the last 24 hours.\n  </p>\n</div>\n","import {NgModule} from '@angular/core';\nimport {CustomNativeExtensionComponent} from './custom-native-extension.component';\nimport {RegistrationService} from '@upscale/web-storefront-sdk';\nimport {CommonModule} from \"@angular/common\";\n\n@NgModule({\n  declarations: [CustomNativeExtensionComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [CustomNativeExtensionComponent]\n})\nexport class UpscaleExtensionModule {\n  constructor(private registrationServices: RegistrationService,) {\n    // the value 'my-custom-component' has to be defined used in Workbench as the Native Extension \"Key\"\n    this.registrationServices.register('my-custom-component', CustomNativeExtensionComponent);\n  }\n}\n","/*\n * Public API Surface of custom-native-extension\n */\n\nexport * from './lib/custom-native-extension.service';\nexport * from './lib/custom-native-extension.component';\nexport * from './lib/custom-native-extension.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["Injectable","Component","CommonModule","NgModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAOE;SAAiB;;;mJAFN,4BAA4B;uJAA5B,4BAA4B,cAF3B,MAAM;qHAEP,4BAA4B;sBAHxCA,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCQC,wCACU,cAA8B;YAA9B,mBAAc,GAAd,cAAc,CAAgB;YAHxC,gBAAW,GAAW,IAAI,CAAC;SAK1B;QAED,iDAAQ,GAAR;YAAA,iBAeC;YAdC,IAAI,YAAY,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACnD,IAAI,SAAS,GAAG,YAAY,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAEtD,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,UAAC,OAAO;gBAC9D,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,EAAE;oBAChC,UAAU,CAAC;wBACT,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;qBACzB,EAAE,CAAC,CAAC,CAAA;iBACN;qBAAM;oBACL,UAAU,CAAC;wBACT,KAAI,CAAC,WAAW,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;qBAC7D,EAAE,CAAC,CAAC,CAAA;iBACN;aACF,CAAC,CAAC;SACJ;;;qJAvBU,8BAA8B;8HAA9B,8BAA8B,8ECT3C,0NAKA;qHDIa,8BAA8B;sBAN1CC,YAAS;uBAAC;wBACT,QAAQ,EAAE,6BAA6B;wBACvC,WAAW,EAAE,0CAA0C;wBACvD,SAAS,EAAE,CAAC,0CAA0C,CAAC;qBACxD;;;;QEMC,gCAAoB,oBAAyC;YAAzC,yBAAoB,GAApB,oBAAoB,CAAqB;;YAE3D,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,qBAAqB,EAAE,8BAA8B,CAAC,CAAC;SAC3F;;;6IAJU,sBAAsB;8IAAtB,sBAAsB,iBANlB,8BAA8B,aAE3CC,eAAY,aAEJ,8BAA8B;8IAE7B,sBAAsB,YALxB;gBACPA,eAAY;aACb;qHAGU,sBAAsB;sBAPlCC,WAAQ;uBAAC;wBACR,YAAY,EAAE,CAAC,8BAA8B,CAAC;wBAC9C,OAAO,EAAE;4BACPD,eAAY;yBACb;wBACD,OAAO,EAAE,CAAC,8BAA8B,CAAC;qBAC1C;;;ICXD;;;;ICAA;;;;;;;;;;;;;;"}